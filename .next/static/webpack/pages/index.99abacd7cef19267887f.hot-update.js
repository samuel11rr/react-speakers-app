"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./SpeakerData.js":
/*!************************!*\
  !*** ./SpeakerData.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"data\": function() { return /* binding */ data; }\n/* harmony export */ });\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar data = [{\n  id: \"1269\",\n  first: \"Arun\",\n  last: \"Gupta\",\n  company: \"Amazon\",\n  bio: \"Arun Gupta is a Principal Open Source Technologist at Amazon Web Services. \",\n  twitterHandle: \"arungupta\",\n  favorite: true,\n  sessions: [{\n    id: \"32\",\n    title: \"Rails powered by GlassFish\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"58\",\n    title: \"Metro: Hello World to .NET 3.5 interoperable Web service\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"61\",\n    title: \"GlassFish: On a mission to please developers\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"263\",\n    title: \"Java EE 6 and GlassFish v3: Paving the path for future\",\n    eventYear: \"2009\",\n    room: {\n      name: \"5502\",\n      capacity: 70\n    }\n  }, {\n    id: \"264\",\n    title: \"Using Eclipse for Java EE 6 development for the GlassFish™ Application Server\",\n    eventYear: \"2009\",\n    room: {\n      name: \"5503\",\n      capacity: 44\n    }\n  }, {\n    id: \"265\",\n    title: \"Dynamic Languages &amp; Web Frameworks in GlassFish\",\n    eventYear: \"2009\",\n    room: {\n      name: \"4204\",\n      capacity: 45\n    }\n  }, {\n    id: \"440\",\n    title: \"Java EE 6: Doing More With Less\",\n    eventYear: \"2010\",\n    room: {\n      name: \"8401\",\n      capacity: 48\n    }\n  }, {\n    id: \"441\",\n    title: \"OSGi and Java EE in GlassFish\",\n    eventYear: \"2010\",\n    room: {\n      name: \"4220\",\n      capacity: 50\n    }\n  }, {\n    id: \"444\",\n    title: \"Running your Java EE 6 application in the Cloud\",\n    eventYear: \"2010\",\n    room: {\n      name: \"3106\",\n      capacity: 45\n    }\n  }, {\n    id: \"766\",\n    title: \"Deploy and Monitor your Java EE 6 session in a fully-clustered GlassFish\",\n    eventYear: \"2011\",\n    room: {\n      name: \"4201\",\n      capacity: 70\n    }\n  }, {\n    id: \"770\",\n    title: \"The Java EE 7 Platform: Developing for the Cloud\",\n    eventYear: \"2011\",\n    room: {\n      name: \"4201\",\n      capacity: 70\n    }\n  }, {\n    id: \"864\",\n    title: \"RESTful Java on Steroids: JAX-RS 2.0\",\n    eventYear: \"2012\",\n    room: {\n      name: \"5502\",\n      capacity: 70\n    }\n  }, {\n    id: \"1131\",\n    title: \"50 new features of Java EE 7 in 50 minutes\",\n    eventYear: \"2013\",\n    room: {\n      name: \"3525\",\n      capacity: 110\n    }\n  }, {\n    id: \"1262\",\n    title: \"Minecraft Modding Workshop (Part 1 of 2)\",\n    eventYear: \"2013\",\n    room: {\n      name: \"PSEC4603\",\n      capacity: 1\n    }\n  }, {\n    id: \"1352\",\n    title: \"Minecraft Modding Workshop (Part 2 of 2)\",\n    eventYear: \"2013\",\n    room: {\n      name: \"PSEC4603\",\n      capacity: 1\n    }\n  }, {\n    id: \"1440\",\n    title: \" All about WildFly, Only using demos\",\n    eventYear: \"2014\",\n    room: {\n      name: \"4302\",\n      capacity: 41\n    }\n  }, {\n    id: \"1441\",\n    title: \"Java EE 7 development using Eclipse\",\n    eventYear: \"2014\",\n    room: {\n      name: \"4301\",\n      capacity: 64\n    }\n  }, {\n    id: \"2529\",\n    title: \"Introductory Minecraft Modding with Forge - Part 1\",\n    eventYear: \"2014\",\n    room: {\n      name: \"PSEC4501\",\n      capacity: 73\n    }\n  }, {\n    id: \"2557\",\n    title: \"Introductory Minecraft Modding with Forge - Part II\",\n    eventYear: \"2014\",\n    room: {\n      name: \"PSEC4501\",\n      capacity: 73\n    }\n  }, {\n    id: \"3694\",\n    title: \"Docker and Kubernetes Recipes for Java Applications\",\n    eventYear: \"2015\",\n    room: {\n      name: \"AD-123\",\n      capacity: 70\n    }\n  }, {\n    id: \"4835\",\n    title: \"Docker and Kubernetes Workshop\",\n    eventYear: \"2015fall\",\n    room: {\n      name: \"RD-301\",\n      capacity: 42\n    }\n  }, {\n    id: \"4860\",\n    title: \"Minecraft Modding with Forge - Part 1\",\n    eventYear: \"2015\",\n    room: {\n      name: \"AB-142\",\n      capacity: 78\n    }\n  }, {\n    id: \"5922\",\n    title: \"Minecraft Modding with Forge - Part 2\",\n    eventYear: \"2015\",\n    room: {\n      name: \"AB-142\",\n      capacity: 78\n    }\n  }, {\n    id: \"6060\",\n    title: \"Package, Deploy, Scale Your Applications Using Docker and Kubernetes\",\n    eventYear: \"2016fall\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"6205\",\n    title: \"Service Discovery in Container Orchestration Frameworks\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square C\",\n      capacity: 130\n    }\n  }, {\n    id: \"7379\",\n    title: \"Java developer’s journey in Kubernetes land\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Fireside C\",\n      capacity: 80\n    }\n  }, {\n    id: \"7486\",\n    title: \"Using Kubernetes for Machine Learning Frameworks\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }]\n}, {\n  id: \"8590\",\n  first: \"Chris\",\n  last: \"Richardson\",\n  company: \"Eventuate, Inc\",\n  bio: \"Founder of Eventuate, Author of POJOs in Action, creator of the original Cloud Foundry\",\n  twitterHandle: \"crichardson\",\n  favorite: false,\n  sessions: [{\n    id: \"1011\",\n    title: \"Decomposing applications for scalability and deployability\",\n    eventYear: \"2012\",\n    room: {\n      name: \"4306\",\n      capacity: 100\n    }\n  }, {\n    id: \"1133\",\n    title: \"Developing polyglot persistence applications\",\n    eventYear: \"2013\",\n    room: {\n      name: \"5502\",\n      capacity: 70\n    }\n  }, {\n    id: \"1136\",\n    title: \"Consuming web services asynchronously with Futures and Rx Observables\",\n    eventYear: \"2013\",\n    room: {\n      name: \"8338\",\n      capacity: 120\n    }\n  }, {\n    id: \"1454\",\n    title: \"Developing applications with a micro-service architecture\",\n    eventYear: \"2014\",\n    room: {\n      name: \"8338\",\n      capacity: 120\n    }\n  }, {\n    id: \"1455\",\n    title: \"Map, flatmap and reduce are your new best friends\",\n    eventYear: \"2014\",\n    room: {\n      name: \"5502\",\n      capacity: 70\n    }\n  }, {\n    id: \"4765\",\n    title: \"Developing event-driven microservices with event sourcing and CQRS\",\n    eventYear: \"2015\",\n    room: {\n      name: \"AB-201\",\n      capacity: 66\n    }\n  }, {\n    id: \"6080\",\n    title: \"Developing Microservices with Aggregates\",\n    eventYear: \"2016\",\n    room: {\n      name: \"RF-141\",\n      capacity: 58\n    }\n  }, {\n    id: \"6214\",\n    title: \"There Is No Such Thing as a Microservice!\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square C\",\n      capacity: 130\n    }\n  }, {\n    id: \"7401\",\n    title: \"Developing Asynchronous, Message-Driven Microservices\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Round Table\",\n      capacity: 75\n    }\n  }, {\n    id: \"7402\",\n    title: \"Microservices: Decomposing Applications for Testability and Deployability\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7460\",\n    title: \"Microservices and Serverless Speaker Panel – The Road Ahead\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7515\",\n    title: \"Cubes, Hexagons and More: Understanding the Microservices Through Shapes\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square C\",\n      capacity: 130\n    }\n  }]\n}, {\n  id: \"5443\",\n  first: \"Mark\",\n  last: \"Abramson\",\n  company: \"Printform Corporation\",\n  bio: \"Mark is a globally recognized expert on digital printing for industrial and packaging applications.\",\n  twitterHandle: \"mark__a\",\n  favorite: true,\n  sessions: [{\n    id: \"676\",\n    title: \"Accelerate your database development with Object-Relational Mapping (OR/M) in .NET\",\n    eventYear: \"2011\",\n    room: {\n      name: \"8401\",\n      capacity: 48\n    }\n  }, {\n    id: \"677\",\n    title: \"Introduction to Database Design with Entity Relationship (ER) Diagrams\",\n    eventYear: \"2011\",\n    room: {\n      name: \"5501\",\n      capacity: 70\n    }\n  }, {\n    id: \"859\",\n    title: \"Database Design Troubleshooting, repair and wart removal\",\n    eventYear: \"2012\",\n    room: {\n      name: \"3525\",\n      capacity: 110\n    }\n  }, {\n    id: \"861\",\n    title: \"Introduction to Database Design with Entity Relationship (ER) Diagrams\",\n    eventYear: \"2012\",\n    room: {\n      name: \"3525\",\n      capacity: 110\n    }\n  }, {\n    id: \"1120\",\n    title: \"Intro to Relational Database Design & Entity-Relationship Diagrams\",\n    eventYear: \"2013\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"1125\",\n    title: \"Advanced Data Modeling with Entity Relationship Diagrams\",\n    eventYear: \"2013\",\n    room: {\n      name: \"PSEC4501\",\n      capacity: 73\n    }\n  }, {\n    id: \"1435\",\n    title: \"Intro to Relational Database Design & Entity-Relationship Diagrams\",\n    eventYear: \"2014\",\n    room: {\n      name: \"8402\",\n      capacity: 80\n    }\n  }, {\n    id: \"2577\",\n    title: \"Lean Startup for Engineers\",\n    eventYear: \"2014\",\n    room: {\n      name: \"8402\",\n      capacity: 80\n    }\n  }, {\n    id: \"4819\",\n    title: \"Lean Startup for Engineers\",\n    eventYear: \"2015\",\n    room: {\n      name: \"AC-162\",\n      capacity: 77\n    }\n  }, {\n    id: \"6184\",\n    title: \"Lean Startup for Engineers\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Fireside D\",\n      capacity: 80\n    }\n  }]\n}, {\n  id: \"1124\",\n  first: \"Douglas\",\n  last: \"Crockford\",\n  company: \"PayPal\",\n  bio: \"Douglas Crockford discovered the JSON Data Interchange Format. He is also the author of _JavaScript: The Good Parts_. He has been called a guru, but he is actually more of a mahatma.\",\n  twitterHandle: \"notatweeter\",\n  favorite: true,\n  sessions: [{\n    id: \"12\",\n    title: \"JavaScript: The Good Parts (Part 1)\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"121\",\n    title: \"JavaScript: The Good Parts (Part 2)\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"176\",\n    title: \"JavaScript: The Good Parts\",\n    eventYear: \"2009\",\n    room: {\n      name: \"5501\",\n      capacity: 70\n    }\n  }, {\n    id: \"177\",\n    title: \"JavaScript Town Meeting\",\n    eventYear: \"2009\",\n    room: {\n      name: \"5501\",\n      capacity: 70\n    }\n  }, {\n    id: \"371\",\n    title: \"JavaScript: The Good Parts\",\n    eventYear: \"2010\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"536\",\n    title: \"Talk with Crock\",\n    eventYear: \"2010\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"588\",\n    title: \"ECMAScript 5: The New Parts\",\n    eventYear: \"2011\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"589\",\n    title: \"ECMAScript: What Next?\",\n    eventYear: \"2011\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"833\",\n    title: \"Programming Style and Your Brain\",\n    eventYear: \"2012\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1056\",\n    title: \"Monads and Gonads\",\n    eventYear: \"2012\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1198\",\n    title: \"Fun with Functions (Part 1)\",\n    eventYear: \"2013\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1199\",\n    title: \"Fun with Functions (Part 2)\",\n    eventYear: \"2013\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1390\",\n    title: \"Fun with Functions in JavaScript (Full Day)\",\n    eventYear: \"2014\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"1416\",\n    title: \"The Better Parts\",\n    eventYear: \"2014\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"3643\",\n    title: \"Managing Programmers. Programmers are not like the other kids\",\n    eventYear: \"2014\",\n    room: {\n      name: \"1501\",\n      capacity: 190\n    }\n  }, {\n    id: \"3687\",\n    title: \"The Better Parts\",\n    eventYear: \"2015\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"3696\",\n    title: \"Managing Programmers\",\n    eventYear: \"2015\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"4726\",\n    title: \"Upgrading the Web\",\n    eventYear: \"2015sf\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"5987\",\n    title: \"The Seif Project Continued\",\n    eventYear: \"2016\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"6171\",\n    title: \"The Post Javascript Apocalypse\",\n    eventYear: \"2016\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"6208\",\n    title: \"Numbers\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"6209\",\n    title: \"Character Sets\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7256\",\n    title: \"Principles of Security\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7417\",\n    title: \"How JavaScript Works\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }, {\n    id: \"7418\",\n    title: \"Q&A With Douglas Crockford\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Fireside A\",\n      capacity: 80\n    }\n  }, {\n    id: \"7465\",\n    title: \"Web Panel with Douglas Crockford, Steve Souders and Mike North\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7489\",\n    title: \"The History of JSON\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }, {\n    id: \"7569\",\n    title: \"You Can Count on Numbers\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }]\n}, {\n  id: \"10801\",\n  first: \"Troy\",\n  last: \"Miles\",\n  company: \"Kelley Blue Book\",\n  bio: \"An award winning developer and author.\",\n  twitterHandle: \"therockncoder\",\n  favorite: false,\n  sessions: [{\n    id: \"1252\",\n    title: \"Beginning HTML5 Mobile Game Programming\",\n    eventYear: \"2013\",\n    room: {\n      name: \"8338\",\n      capacity: 120\n    }\n  }, {\n    id: \"1444\",\n    title: \"Intro to Mobile Game Programming with Cocos2d-x, Part 1\",\n    eventYear: \"2014\",\n    room: {\n      name: \"4220\",\n      capacity: 50\n    }\n  }, {\n    id: \"1445\",\n    title: \"Intro to Mobile Game Programming with Cocos2d-x, Part 2\",\n    eventYear: \"2014\",\n    room: {\n      name: \"4220\",\n      capacity: 50\n    }\n  }, {\n    id: \"6085\",\n    title: \"Functional Programming in JavaScript\",\n    eventYear: \"2016\",\n    room: {\n      name: \"Gullo II\",\n      capacity: 200\n    }\n  }, {\n    id: \"7242\",\n    title: \"Creating an AWS Lambda Function with Kotlin\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Fireside D\",\n      capacity: 80\n    }\n  }, {\n    id: \"7346\",\n    title: \"C++ Web Servers and APIs\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Fireside A\",\n      capacity: 80\n    }\n  }]\n}, {\n  id: \"47343\",\n  first: \"Eve\",\n  last: \"Porcello\",\n  company: \"Moon Highway\",\n  bio: \"Eve Porcello is an instructor at Moon Highway, egghead.io, and LinkedIn Learning.\",\n  twitterHandle: \"eveporcello\",\n  favorite: true,\n  sessions: [{\n    id: \"7548\",\n    title: \"React Is Your Friend: A Gentle Intro to the React Library\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }]\n}, {\n  id: \"14918\",\n  first: \"Claudia\",\n  last: \"Galvan\",\n  company: \"Early Stage Innovation\",\n  bio: \"Claudia is a leading expert on product internationalization\",\n  twitterHandle: \"cgalvan\",\n  favorite: false,\n  sessions: [{\n    id: \"4820\",\n    title: \"Innovation for Women Engineers\",\n    eventYear: \"2015\",\n    room: {\n      name: \"RE-311\",\n      capacity: 68\n    }\n  }, {\n    id: \"6012\",\n    title: \"Internationalization at Startups\",\n    eventYear: \"2016\",\n    room: {\n      name: \"S-160\",\n      capacity: 60\n    }\n  }, {\n    id: \"7341\",\n    title: \"Advancing your Career through technical leadership skills \",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }, {\n    id: \"7497\",\n    title: \"GDPR and Privacy Around the World\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Fireside B\",\n      capacity: 80\n    }\n  }]\n}, {\n  id: \"46769\",\n  first: \"Mary\",\n  last: \"Grygleski\",\n  company: \"IBM\",\n  bio: \"Mary is a passionate developer advocate by day, and a very active tech community organizer by night.\",\n  twitterHandle: \"mgrygles\",\n  favorite: true,\n  sessions: [{\n    id: \"7549\",\n    title: \"A Gentle Intro to Reactive Java Programming and Systems\",\n    eventYear: \"2019\",\n    room: {\n      name: \"Fireside A\",\n      capacity: 80\n    }\n  }]\n}, {\n  id: \"8367\",\n  first: \"Gayle Laakmann\",\n  last: \"McDowell\",\n  company: \"CareerCup\",\n  bio: \"Gayle Laakmann McDowell is the founder and CEO of CareerCup.com and the author of three books.\",\n  twitterHandle: \"gayle\",\n  favorite: false,\n  sessions: [{\n    id: \"944\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2012\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1086\",\n    title: \"Cracking the Coding Interview: Advice for Devs and PM Interviews\",\n    eventYear: \"2013\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1412\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2014\",\n    room: {\n      name: \"SmithWick\",\n      capacity: 1000\n    }\n  }, {\n    id: \"1413\",\n    title: \"Cracking the Product Manager Interview\",\n    eventYear: \"2014\",\n    room: {\n      name: \"5015\",\n      capacity: 217\n    }\n  }, {\n    id: \"3701\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2015\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"3703\",\n    title: \"Cracking the Product Manager Interview\",\n    eventYear: \"2015\",\n    room: {\n      name: \"SC-127\",\n      capacity: 250\n    }\n  }, {\n    id: \"5984\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2016\",\n    room: {\n      name: \"VPA-Theater\",\n      capacity: 395\n    }\n  }, {\n    id: \"5986\",\n    title: \"Be a Better Interviewer: How to Interview Like Google (or not)-But Better!\",\n    eventYear: \"2016\",\n    room: {\n      name: \"SC-127\",\n      capacity: 250\n    }\n  }, {\n    id: \"6227\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Fireside B\",\n      capacity: 80\n    }\n  }, {\n    id: \"6229\",\n    title: \"Hiring Coders with Whiteboard Interviews and Other Questions\",\n    eventYear: \"2017\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }, {\n    id: \"7366\",\n    title: \"Cracking the Coding Interview\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }, {\n    id: \"7367\",\n    title: \"Interview Like Google (or not)-But Better!\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square A\",\n      capacity: 130\n    }\n  }, {\n    id: \"7368\",\n    title: \"Cracking the Product Manager Interview\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }]\n}, {\n  id: \"620\",\n  first: \"Ron\",\n  last: \"Kleinman\",\n  company: \"De Anza College\",\n  bio: \"Ron teaches Object Oriented Analysis and Design at De Anza College \",\n  twitterHandle: \"notweets\",\n  favorite: false,\n  sessions: [{\n    id: \"86\",\n    title: \"The Performance Limitations  of the Java Platform ... and how to avoid them\",\n    eventYear: \"2008\",\n    room: {\n      name: \"Cornell Hall\",\n      capacity: 0\n    }\n  }, {\n    id: \"6089\",\n    title: \"So your mom always wanted you to be an architect\",\n    eventYear: \"2016\",\n    room: {\n      name: \"C209\",\n      capacity: 55\n    }\n  }, {\n    id: \"7440\",\n    title: \"How to Think like a Software Architect\",\n    eventYear: \"2018\",\n    room: {\n      name: \"Fireside A\",\n      capacity: 80\n    }\n  }, {\n    id: \"7551\",\n    title: 'How to \"think\" (and design) like a Software Architect',\n    eventYear: \"2019\",\n    room: {\n      name: \"Town Square B\",\n      capacity: 130\n    }\n  }]\n}];\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./SpeakerData.js\n");

/***/ }),

/***/ "./src/components/SpeakersList.js":
/*!****************************************!*\
  !*** ./src/components/SpeakersList.js ***!
  \****************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Speaker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Speaker */ \"./src/components/Speaker.js\");\n/* harmony import */ var _SpeakerData__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../SpeakerData */ \"./SpeakerData.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__);\n/* module decorator */ module = __webpack_require__.hmd(module);\nvar _jsxFileName = \"/Users/samuel/Develop/components/src/components/SpeakersList.js\",\n    _this = undefined;\n\n\n\n\n\nvar SpeakersList = function SpeakersList(_ref) {\n  var showSessions = _ref.showSessions;\n  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n    className: \"container speakers-list\",\n    children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(\"div\", {\n      className: \"row\",\n      children: _SpeakerData__WEBPACK_IMPORTED_MODULE_1__.data.map(function (speaker) {\n        return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_Speaker__WEBPACK_IMPORTED_MODULE_0__.default, {\n          speaker: speaker,\n          showSessions: showSessions\n        }, speaker.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 10,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = SpeakersList;\n/* harmony default export */ __webpack_exports__[\"default\"] = (SpeakersList);\n\nvar _c;\n\n$RefreshReg$(_c, \"SpeakersList\");\n\n;\n    var _a, _b;\n    // Legacy CSS implementations will `eval` browser code in a Node.js context\n    // to extract CSS. For backwards compatibility, we need to check we're in a\n    // browser context before continuing.\n    if (typeof self !== 'undefined' &&\n        // AMP / No-JS mode does not inject these helpers:\n        '$RefreshHelpers$' in self) {\n        var currentExports = module.__proto__.exports;\n        var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n        // This cannot happen in MainTemplate because the exports mismatch between\n        // templating and execution.\n        self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n        // A module can be accepted automatically based on its exports, e.g. when\n        // it is a Refresh Boundary.\n        if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n            // Save the previous exports on update so we can compare the boundary\n            // signatures.\n            module.hot.dispose(function (data) {\n                data.prevExports = currentExports;\n            });\n            // Unconditionally accept an update to this module, we'll check if it's\n            // still a Refresh Boundary later.\n            module.hot.accept();\n            // This field is set when the previous version of this module was a\n            // Refresh Boundary, letting us know we need to check for invalidation or\n            // enqueue an update.\n            if (prevExports !== null) {\n                // A boundary can become ineligible if its exports are incompatible\n                // with the previous exports.\n                //\n                // For example, if you add/remove/change exports, we'll want to\n                // re-execute the importing modules, and force those components to\n                // re-render. Similarly, if you convert a class component to a\n                // function, we want to invalidate the boundary.\n                if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                    module.hot.invalidate();\n                }\n                else {\n                    self.$RefreshHelpers$.scheduleUpdate();\n                }\n            }\n        }\n        else {\n            // Since we just executed the code for the module, it's possible that the\n            // new exports made it ineligible for being a boundary.\n            // We only care about the case when we were _previously_ a boundary,\n            // because we already accepted this update (accidental side effect).\n            var isNoLongerABoundary = prevExports !== null;\n            if (isNoLongerABoundary) {\n                module.hot.invalidate();\n            }\n        }\n    }\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvY29tcG9uZW50cy9TcGVha2Vyc0xpc3QuanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUE7QUFDQTs7O0FBRUEsSUFBTUUsWUFBWSxHQUFHLFNBQWZBLFlBQWUsT0FBc0I7QUFBQSxNQUFuQkMsWUFBbUIsUUFBbkJBLFlBQW1CO0FBQ3pDLHNCQUNFO0FBQUssYUFBUyxFQUFDLHlCQUFmO0FBQUEsMkJBQ0U7QUFBSyxlQUFTLEVBQUMsS0FBZjtBQUFBLGdCQUVJRixrREFBQSxDQUFVLFVBQUFJLE9BQU87QUFBQSw0QkFDZiw4REFBQyw2Q0FBRDtBQUVFLGlCQUFPLEVBQUdBLE9BRlo7QUFHRSxzQkFBWSxFQUFHRjtBQUhqQixXQUNRRSxPQUFPLENBQUNDLEVBRGhCO0FBQUE7QUFBQTtBQUFBO0FBQUEsaUJBRGU7QUFBQSxPQUFqQjtBQUZKO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFERjtBQUFBO0FBQUE7QUFBQTtBQUFBLFdBREY7QUFlRCxDQWhCRDs7S0FBTUo7QUFrQk4sK0RBQWVBLFlBQWYiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vc3JjL2NvbXBvbmVudHMvU3BlYWtlcnNMaXN0LmpzP2NhNTAiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFNwZWFrZXIgZnJvbSBcIi4vU3BlYWtlclwiXG5pbXBvcnQgeyBkYXRhIH0gZnJvbSBcIi4uLy4uL1NwZWFrZXJEYXRhXCI7XG5cbmNvbnN0IFNwZWFrZXJzTGlzdCA9ICh7IHNob3dTZXNzaW9ucyB9KSA9PiB7XG4gIHJldHVybiAoXG4gICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXIgc3BlYWtlcnMtbGlzdFwiPlxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJyb3dcIj5cbiAgICAgICAge1xuICAgICAgICAgIGRhdGEubWFwKCBzcGVha2VyID0+IChcbiAgICAgICAgICAgIDxTcGVha2VyIFxuICAgICAgICAgICAgICBrZXk9eyBzcGVha2VyLmlkIH1cbiAgICAgICAgICAgICAgc3BlYWtlcj17IHNwZWFrZXIgfVxuICAgICAgICAgICAgICBzaG93U2Vzc2lvbnM9eyBzaG93U2Vzc2lvbnMgfVxuICAgICAgICAgICAgLz5cbiAgICAgICAgICApKVxuICAgICAgICB9XG4gICAgICA8L2Rpdj5cbiAgICA8L2Rpdj5cbiAgKVxufVxuXG5leHBvcnQgZGVmYXVsdCBTcGVha2Vyc0xpc3Q7Il0sIm5hbWVzIjpbIlNwZWFrZXIiLCJkYXRhIiwiU3BlYWtlcnNMaXN0Iiwic2hvd1Nlc3Npb25zIiwibWFwIiwic3BlYWtlciIsImlkIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/components/SpeakersList.js\n");

/***/ })

});